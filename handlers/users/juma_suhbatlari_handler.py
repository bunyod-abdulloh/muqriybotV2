from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message

from keyboards.default.audio_video_dk import alldk
from keyboards.inline.juma_suhbatlari_inkeys import juma_suhbatlari_keys, video_dict, audio_dict, back_menyu_keys
from loader import bot, dp, statdb
from states.jumasuhbatlari_states import JumaSuhbatlari

VIDEO_CHANNEL = -1001739337616
AUDIO_CHANNEL = -1001847685422
list_messages = []


async def juma_title():
    text = '1. –ù–∞–º–æ–∑ - –º—û–º–∏–Ω–Ω–∏–Ω–≥ –º–µ—ä—Ä–æ–∂–∏\n2. –ù–∞–º–æ–∑–≥–∞ –æ–∏–¥ –º–∞—Å–∞–ª–∞–ª–∞—Ä –±–∞—ë–Ω–∏' \
           '\n3. –ñ–∞–Ω–Ω–∞—Ç ‚Äì –æ–Ω–∞–ª–∞—Ä –æ—ë“ì–∏ –æ—Å—Ç–∏–¥–∞\n4. –ò–∂—Ç–∏–º–æ–∏–π –∏–ª–ª–∞—Ç–ª–∞—Ä (—Ñ–∏—Ä–∏–±–≥–∞—Ä–ª–∏–∫, —û–∑–≥–∞–ª–∞—Ä –º–æ–ª–∏–Ω–∏ –Ω–æ“≥–∞“õ –µ–π–∏—à)' \
           '\n5. –ò–ª–º–ª–∏ —ë—à–ª–∞—Ä - —é—Ä—Ç –∫–µ–ª–∞–∂–∞–≥–∏\n6. –ê–∑–∏–∑ —É–º—Ä–Ω–∏–Ω–≥ “õ–∞–¥—Ä–∏–≥–∞ –µ—Ç–∞–π–ª–∏–∫' \
           '\n7. –¢–∏–ª –æ—Ñ–∞—Ç–ª–∞—Ä–∏\n8. –Å—à–ª–∞—Ä–Ω–∏ –∏–∂—Ç–∏–º–æ–∏–π –∏–ª–ª–∞—Ç–ª–∞—Ä–¥–∞–Ω —Å–∞“õ–ª–∞–π–ª–∏–∫!' \
           '\n9. –ü–∞–π“ì–∞–º–±–∞—Ä–∏–º–∏–∑ –∞–ª–∞–π“≥–∏—Å—Å–∞–ª–æ–º–Ω–∏–Ω–≥ —Å—û–Ω–≥–∏ –≤–∞—Å–∏—è—Ç–ª–∞—Ä–∏' \
           '\n10. –ë–∏—Ä “≥–∞–¥–∏—Å —à–∞—Ä“≥–∏: –ö–∏—à–∏ –∏—Å–ª–æ–º–∏–Ω–∏–Ω–≥ –≥—û–∑–∞–ª–ª–∏–≥–∏' \
           '\n11. –é–∑–∞—Ä–æ –º–µ“≥—Ä - –æ“õ–∏–±–∞—Ç–ª–∏ –±—û–ª–º–∞–≥—É–Ω–∏–Ω–≥–∏–∑—á–∞, –∫–æ–º–∏–ª –º—û–º–∏–Ω –±—û–ª–æ–ª–º–∞–π—Å–∏–∑–ª–∞—Ä' \
           '\n12. –ò—Ö–ª–æ—Å - –∞–º–∞–ª–ª–∞—Ä –∞—Å–æ—Å–∏\n13. –ë–∏—Ä “≥–∞–¥–∏—Å —à–∞—Ä“≥–∏: ".... –±–∏–∑–¥–∞–Ω —ç–º–∞—Å" “≥–∞–¥–∏—Å–ª–∞—Ä —Ç—É—Ä–∫—É–º–∏' \
           '\n14. –ó–∞–∫–æ—Ç - –º–æ–ª–∏—è–≤–∏–π –∏–±–æ–¥–∞—Ç\n15. “ö–∞–¥—Ä –∫–µ—á–∞—Å–∏–Ω–∏–Ω–≥ —Ñ–∞–∑–∏–ª–∞—Ç–∏\n16. C–∏–ª–∞–∏ —Ä–∞“≥–º - “õ–∞—Ä–∏–Ω–¥–æ—à–ª–∏–∫ –∞–ª–æ“õ–∞–ª–∞—Ä–∏–Ω–∏ —è—Ö—à–∏–ª–∞—à' \
           '\n17. –§–∞—Ä–∏—à—Ç–∞–ª–∞—Ä “≥–∞–º “≥–∞—ë “õ–∏–ª–≥–∞–Ω –∑–æ—Ç\n18. –°—É–Ω–Ω–∞—Ç–≥–∞ –∞–º–∞–ª “õ–∏–ª–∏—à –≤–∞ –±–∏–¥—ä–∞—Ç–Ω–∏–Ω–≥ –∑–∞—Ä–∞—Ä–ª–∞—Ä–∏' \
           '\n19. O–∏–ª–∞–≤–∏–π –∞–∂—Ä–∏–º–ª–∞—Ä-–∂–∞–º–∏—è—Ç –∑–∞–≤–æ–ª–∏\n20. “ö–∏–º–æ—Ä–Ω–∏–Ω–≥ –∏–∂—Ç–∏–º–æ–∏–π –∑–∞—Ä–∞—Ä–ª–∞—Ä–∏' \
           '\n21. –ò—Å–ª–æ–º–¥–∞ “≥–∞–º–∂–∏“≥–∞—Ç–ª–∏–∫ - —Ç–∏–Ω—á–ª–∏–∫ –≥–∞—Ä–æ–≤–∏\n22. –≠—ä–∑–æ–∑ –≤–∞ —ç“≥—Ç–∏—Ä–æ–º–≥–∞ –º—É–Ω–æ—Å–∏–± –∑–æ—Ç–ª–∞—Ä' \
           '\n23. –ê–ª–ª–æ“≥ –≤–∞ –†–∞—Å—É–ª–∏–Ω–∏–Ω–≥ –º—É—Ö–∞–±–±–∞—Ç–∏–≥–∞ —Å–∞–∑–æ–≤–æ—Ä –±—û–ª–≥–∞–Ω –∑–æ—Ç\n24. –ê–ª–ª–æ“≥ —Ç–∞–æ–ª–æ–≥–∞ –∏–π–º–æ–Ω –∫–µ–ª—Ç–∏—Ä–∏—à –≤–∞ —É–Ω–≥–∞ –æ–∏–¥ –º–∞—Å–∞–ª–∞–ª–∞—Ä' \
           '\n25. “≤–∞—Å–∞–¥ - —ç–∑–≥—É–ª–∏–∫ –∑–∞–≤–æ–ª–∏'
    return text


@dp.message_handler(text='üìå –ñ—É–º–∞ –º–∞–≤—ä–∏–∑–∞–ª–∞—Ä–∏', state='*')
async def jumamaviza_func(msg: Message, state: FSMContext):
    await state.finish()
    await msg.answer(msg.text, reply_markup=alldk)
    await JumaSuhbatlari.juma_one.set()


@dp.message_handler(state=JumaSuhbatlari.juma_one)
async def juma_one_state(msg: Message, state: FSMContext):
    if msg.text == 'üéß Ay–¥–∏o':
        await statdb.upsert_statistics(chapter_name="Juma mav'izalari")
        await msg.answer(text=await juma_title(), reply_markup=await juma_suhbatlari_keys(audio=True))
        await JumaSuhbatlari.juma_audio_one.set()

    elif msg.text == 'üé¨ –í–∏–¥–µ–æ':
        await statdb.upsert_statistics(chapter_name="Juma mav'izalari")
        await msg.answer(text=await juma_title(), reply_markup=await juma_suhbatlari_keys(video=True))
        await JumaSuhbatlari.juma_video_one.set()


@dp.callback_query_handler(state=JumaSuhbatlari.juma_audio_one)
async def juma_one_state(call: CallbackQuery, state: FSMContext):

    await call.message.delete()

    if call.data == 'juma_back':
        await call.message.answer('üìå –ñ—É–º–∞ –º–∞–≤—ä–∏–∑–∞–ª–∞—Ä–∏',
                                  reply_markup=alldk)
        await JumaSuhbatlari.juma_one.set()

    elif call.data in audio_dict.keys():
        for n in audio_dict[call.data]:
            msg_id = await bot.copy_message(chat_id=call.from_user.id,
                                            from_chat_id=AUDIO_CHANNEL,
                                            message_id=n,
                                            reply_markup=back_menyu_keys)
            list_messages.append(msg_id.message_id)
        await JumaSuhbatlari.juma_audio_two.set()


@dp.callback_query_handler(state=JumaSuhbatlari.juma_audio_two)
async def jumaaudio_two_state(call: CallbackQuery, state: FSMContext):

    if call.data == 'juma_back':
        for n in list_messages:
            try:
                await bot.delete_message(chat_id=call.message.chat.id,
                                         message_id=n)
            except:
                continue

        list_messages.clear()

        await call.message.answer(text=await juma_title(),
                                  reply_markup=await juma_suhbatlari_keys(audio=True))
        await JumaSuhbatlari.juma_audio_one.set()


@dp.callback_query_handler(state=JumaSuhbatlari.juma_video_one)
async def juma_one_state(call: CallbackQuery, state: FSMContext):
    await call.message.delete()
    if call.data == 'juma_back':
        await call.message.answer('üìå –ñ—É–º–∞ –º–∞–≤—ä–∏–∑–∞–ª–∞—Ä–∏', reply_markup=alldk)
        await JumaSuhbatlari.juma_one.set()

    elif int(call.data) in video_dict.keys():
        msg_id = await bot.copy_message(chat_id=call.from_user.id,
                                        message_id=video_dict[int(call.data)],
                                        from_chat_id=VIDEO_CHANNEL,
                                        reply_markup=back_menyu_keys)
        list_messages.append(msg_id.message_id)
        await JumaSuhbatlari.juma_video_two.set()


@dp.callback_query_handler(state=JumaSuhbatlari.juma_video_two)
async def jumavideo_one_func(call: CallbackQuery, state: FSMContext):
    await call.message.delete()

    if call.data == 'juma_back':
        for n in list_messages:
            try:
                await bot.delete_message(chat_id=call.message.chat.id,
                                         message_id=n)
            except:
                continue

        list_messages.clear()

        await call.message.answer(text=await juma_title(),
                                  reply_markup=await juma_suhbatlari_keys(video=True))
        await JumaSuhbatlari.juma_video_one.set()

    elif call.data == 'bosh_menyu':
        await state.finish()
        pass
